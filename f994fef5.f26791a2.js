(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return N})),n.d(t,"metadata",(function(){return g})),n.d(t,"toc",(function(){return w})),n.d(t,"default",(function(){return f}));var a=n(3),o=n(7),r=n(0),c=n.n(r),l=n(100),b=n(101),i=n(113),p=n(97),s=n(91),d=n.n(s),m=37,u=39;var h=function(e){var t=e.lazy,n=e.block,a=e.defaultValue,o=e.values,l=e.groupId,b=e.className,s=Object(i.a)(),h=s.tabGroupChoices,O=s.setTabGroupChoices,j=Object(r.useState)(a),N=j[0],g=j[1],w=r.Children.toArray(e.children);if(null!=l){var k=h[l];null!=k&&k!==N&&o.some((function(e){return e.value===k}))&&g(k)}var f=function(e){g(e),null!=l&&O(l,e)},y=[];return c.a.createElement("div",null,c.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(p.a)("tabs",{"tabs--block":n},b)},o.map((function(e){var t=e.value,n=e.label;return c.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":N===t,className:Object(p.a)("tabs__item",d.a.tabItem,{"tabs__item--active":N===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case m:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return f(t)},onClick:function(){f(t)}},n)}))),t?Object(r.cloneElement)(w.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):c.a.createElement("div",{className:"margin-vert--md"},w.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))};var O=function(e){var t=e.children,n=e.hidden,a=e.className;return c.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)},j=["components"],N={slug:"/",id:"godwoken",title:"Godwoken Introduction",sidebar_label:"Godwoken Introduction"},g={unversionedId:"godwoken",id:"godwoken",isDocsHomePage:!1,title:"Godwoken Introduction",description:"Overview",source:"@site/docs\\intro.md",slug:"/",permalink:"/godwoken-review/",version:"current",sidebar_label:"Godwoken Introduction",sidebar:"sidebar2",next:{title:"How to Deposit & Withdraw CKB on Godwoken",permalink:"/godwoken-review/deposit_withdrawal"}},w=[{value:"Overview",id:"overview",children:[{value:"Godwoken Public Networks",id:"godwoken-public-networks",children:[]},{value:"Current Version",id:"current-version",children:[]}]},{value:"Deployment",id:"deployment",children:[{value:"Deploy a Godwoken Network by Using Godwoken-Kicker",id:"deploy-a-godwoken-network-by-using-godwoken-kicker",children:[]},{value:"Deploy a Godwoken Network Manually",id:"deploy-a-godwoken-network-manually",children:[]}]},{value:"How to Use Godwoken",id:"how-to-use-godwoken",children:[{value:"Workflow",id:"workflow",children:[]},{value:"RPC Documentation for Reference",id:"rpc-documentation-for-reference",children:[]},{value:"An Example of Deploying an Ethereum DApp to Godwoken by Godwoken-Kicker",id:"an-example-of-deploying-an-ethereum-dapp-to-godwoken-by-godwoken-kicker",children:[]}]},{value:"Project Examples",id:"project-examples",children:[]},{value:"Comparison With EVM",id:"comparison-with-evm",children:[{value:"pETH",id:"peth",children:[]},{value:"Account Abstraction",id:"account-abstraction",children:[]},{value:"Transaction Structure",id:"transaction-structure",children:[]},{value:"Behavioral Differences of Some Opcodes",id:"behavioral-differences-of-some-opcodes",children:[]},{value:"Addition Features",id:"addition-features",children:[]}]},{value:"Decentralization Roadmap",id:"decentralization-roadmap",children:[]},{value:"References",id:"references",children:[]}],k={toc:w};function f(e){var t=e.components,n=Object(o.a)(e,j);return Object(l.b)("wrapper",Object(a.a)({},k,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"overview"},"Overview"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken"},"Godwoken")," is a layer 2 rollup framework that provides an abstracted account model and abstracted layer 2 transactions upon Nervos CKB."),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice"},"Polyjuice")," is an Ethereum compatible layer designed upon the Godwoken account model. Godwoken comes together with Polyjuice giving developers the ability to seamlessly deploy and run Ethereum contracts."),Object(l.b)("img",{src:Object(b.a)("img/arch.png"),width:"40%"}),Object(l.b)("p",null,"Figure 1. Architecture of Godwoken"),Object(l.b)("h3",{id:"godwoken-public-networks"},"Godwoken Public Networks"),Object(l.b)("p",null,"Testnet and Mainnet are provided for deploying Ethereum DApps to CKB."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-testnet/tree/master/testnet"},"Testnet")),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"RPC URL: ",Object(l.b)("a",{parentName:"li",href:"https://godwoken-testnet-web3-rpc.ckbapp.dev/"},"https://godwoken-testnet-web3-rpc.ckbapp.dev/")),Object(l.b)("li",{parentName:"ul"},"Chain ID: 71393"),Object(l.b)("li",{parentName:"ul"},"Websocket RPC URL: ws://godwoken-testnet-web3-rpc.ckbapp.dev/ws"),Object(l.b)("li",{parentName:"ul"},"Explorer: ",Object(l.b)("a",{parentName:"li",href:"https://aggron.layerview.io"},"https://aggron.layerview.io")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-testnet/tree/master/mainnet"},"Mainnet")),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"RPC URL: ",Object(l.b)("a",{parentName:"p",href:"https://mainnet.godwoken.io/rpc"},"https://mainnet.godwoken.io/rpc"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Chain ID: 71394")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Websocket RPC URL: ",Object(l.b)("a",{parentName:"p",href:"https://mainnet.godwoken.io/ws"},"https://mainnet.godwoken.io/ws"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Explorer: ",Object(l.b)("a",{parentName:"p",href:"https://www.layerview.io/"},"https://www.layerview.io/")))))),Object(l.b)("p",null,"A Godwoken network can also be deployed locally. For more information, see the sections of Deployment."),Object(l.b)("h3",{id:"current-version"},"Current Version"),Object(l.b)("p",null,"The current version available is the ",Object(l.b)("strong",{parentName:"p"},"Godwoken beta"),". We still maintain various levels of control over the mainnet. "),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Why Godwoken Beta?")),Object(l.b)("p",null,"It is the responsible way to make Godwoken available while we keep up improving the system before the official release.\nHere is what you can do with Godwoken beta:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:"left"},"features"),Object(l.b)("th",{parentName:"tr",align:"center"},"maintainer"),Object(l.b)("th",{parentName:"tr",align:"center"},"developer"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"deploy contract"),Object(l.b)("td",{parentName:"tr",align:"center"},"yes"),Object(l.b)("td",{parentName:"tr",align:"center"},"trusted*")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"deploy ERC20 proxy contract"),Object(l.b)("td",{parentName:"tr",align:"center"},"yes"),Object(l.b)("td",{parentName:"tr",align:"center"},"no")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"run full nodes"),Object(l.b)("td",{parentName:"tr",align:"center"},"yes"),Object(l.b)("td",{parentName:"tr",align:"center"},"no")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"run readonly nodes"),Object(l.b)("td",{parentName:"tr",align:"center"},"yes"),Object(l.b)("td",{parentName:"tr",align:"center"},"yes**")))),Object(l.b)("p",null,"During the Godwoken beta phase, the deploy contract feature is only open to developers allowed on the list. We need to upgrade the Godwoken beta or coordinate with developers in case of emergency. Developers or teams are welcome to participate in the Godwoken beta anyways.\nIn the current version, a readonly node cannot query mem-pool status."),Object(l.b)("p",null,"Godwoken beta is limited to the following design choices:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"An optimistic rollup-based design will be used"),Object(l.b)("li",{parentName:"ol"},"A single sequencer sort transactions and issue blocks")),Object(l.b)("p",null,"Beware of Scams and Rugs: Nervos is a permissionless platform. Anybody can deploy an instant of Godwoken. Users and developers must interact with the instant that they can trust."),Object(l.b)("h2",{id:"deployment"},"Deployment"),Object(l.b)("h3",{id:"deploy-a-godwoken-network-by-using-godwoken-kicker"},"Deploy a Godwoken Network by Using Godwoken-Kicker"),Object(l.b)("p",null,"Godwoken-kicker is a one-line command to start a Godwoken network on ",Object(l.b)("strong",{parentName:"p"},"Devnet"),". This deployment method helps developers deploy Ethereum contracts and quickly migrate Ethereum DApps to CKB Devnet in testing and development environments."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"RPC URL: http://localhost:8024"),Object(l.b)("li",{parentName:"ul"},"Chain ID: 1024777")),Object(l.b)("p",null,"Godwoken-kicker provides a quick mode and a custom mode for deployment."),Object(l.b)(h,{defaultValue:"quick",values:[{label:"Quick Mode",value:"quick"},{label:"Custom Mode",value:"custom"}],mdxType:"Tabs"},Object(l.b)(O,{value:"quick",mdxType:"TabItem"},Object(l.b)("p",null,"The quick mode is fast and simple. It executes the builds of all components from pre-built docker images."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker\xa0Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker\xa0Compose")))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If it is already cloned, skip to the next step."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running Godwoken network by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker. "))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"It is the first time to start the Godwoken network."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Godwoken network."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Godwoken network. The ",Object(l.b)("code",null,"make start-f")," command can be used to force deploy and start a new Godwoken network."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"  Do note that after running the ",Object(l.b)("code",null,"make clean")," command, run ",Object(l.b)("code",null,"make init")," again if a reboot is desired. "))),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip to the next step directly.")),Object(l.b)("li",null,Object(l.b)("p",null,"After the Godwoken network has been successfully launched, visit the website ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  RPC URL=http://localhost:8024\n  CHAIN ID=1024777\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Godwoken network."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Godwoken network."),Object(l.b)("li",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Godwoken network."))))),Object(l.b)(O,{value:"custom",mdxType:"TabItem"},Object(l.b)("p",null,"The custom mode is more flexible for custom requirements. It can build the components from local packages and executes the builds locally."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker Compose")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://github.com/nervosnetwork/molecule"},"Moleculec")),Object(l.b)("li",null,"Rustup nightly"))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If it is already cloned, skip to the next step directly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Set the mode with ",Object(l.b)("code",null,"true")," under the ",Object(l.b)("code",null,"[mode]")," section in the ",Object(l.b)("code",null,"/docker/.build.mode.env")," file for the components that you want to build from local packages."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[mode]\nMANUAL_BUILD_GODWOKEN=false\nMANUAL_BUILD_WEB3=false\nMANUAL_BUILD_SCRIPTS=false\nMANUAL_BUILD_POLYJUICE=false\n...\n")),Object(l.b)("p",null,"(Optional) Configure component version under the ",Object(l.b)("code",null,"[packages]")," section in the ",Object(l.b)("code",null,"docker/.build.mode.env")," file."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[packages]\nGODWOKEN_GIT_URL=https://github.com/nervosnetwork/godwoken.git\nGODWOKEN_GIT_CHECKOUT=master\nPOLYMAN_GIT_URL=https://github.com/RetricSu/godwoken-polyman.git\nPOLYMAN_GIT_CHECKOUT=master\nWEB3_GIT_URL=https://github.com/nervosnetwork/godwoken-web3.git\nWEB3_GIT_CHECKOUT=main\n...\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running Godwoken network by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker."))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"The first time to start the Godwoken network."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Godwoken network."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Godwoken network. The ",Object(l.b)("code",null,"make start-f")," command can be used to force deploy and start a new Godwoken network."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip this and go to the next step directly.")),Object(l.b)("li",null,Object(l.b)("p",null,"After the Godwoken network has been successfully launched, visit the website ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  RPC URL=http://localhost:8024\n  CHAIN ID=1024777\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Godwoken network."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Godwoken network.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Godwoken network."))))))),Object(l.b)("p",null,"For more information about the Godwoken-kicker commands, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/RetricSu/godwoken-kicker"},"godwoken-kicker"),"."),Object(l.b)("h3",{id:"deploy-a-godwoken-network-manually"},"Deploy a Godwoken Network Manually"),Object(l.b)("p",null,"This deployment method is useful in situations such as deploying a Godwoken network on ",Object(l.b)("b",null,"Testnet")," or ",Object(l.b)("b",null,"Mainnet"),"."),Object(l.b)("h4",{id:"environment"},"Environment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"OS: Ubuntu 20.04")),Object(l.b)("h4",{id:"prerequisites"},"Prerequisites"),Object(l.b)("p",null,"The following tools need to be installed before entering the deployment process:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Node.js (>=12.0.0)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Yarn (version 1.22.5 or above)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"GCC and make"),Object(l.b)("p",{parentName:"li"},"To install ",Object(l.b)("inlineCode",{parentName:"p"},"GCC")," and ",Object(l.b)("inlineCode",{parentName:"p"},"make")," on Ubuntu 20.04, run the following command as root or user with sudo privileges:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt update\n$ sudo apt install build-essential\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/capsule/releases/tag/v0.7.0"},"Capsule v0.7.0"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Docker"),Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Docker")," must be installed for building and deploying Godwoken. For more information about Docker installation, see ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/"},"Install Docker Engine on Ubuntu"),"."),Object(l.b)("p",{parentName:"li"},"To manage Docker as a non-root user, see the Docker documentation of ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"Manage Docker as a non-root user"),"."))),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"ckb-cli: The ckb-cli tool is used for deploying smart contracts. It can be installed from a ",Object(l.b)("a",{parentName:"li",href:"https://github.com/nervosnetwork/ckb/releases"},"CKB pre-built installer package"),". The verified ckb-cli version in this documentation is ",Object(l.b)("a",{parentName:"li",href:"https://github.com/nervosnetwork/ckb/releases/tag/v0.42.0"},"v0.42.0"),".")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Rustc v1.54.0")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"llvm and clang"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"sudo apt-get install libclang-dev\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"OpenSSL library"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"sudo apt-get install pkg-config libssl-dev\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/molecule"},"Moleculec v0.7.2")),Object(l.b)("p",{parentName:"li"},"To install Moleculec:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cargo install moleculec --locked --version 0.7.2\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/tippy/releases"},"Tippy")),Object(l.b)("p",{parentName:"li"},"Tippy is a tool to help set up and manage CKB nodes. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbnode#install-a-ckb-node-by-using-tippy"},"Install a CKB Node by Using Tippy"),". The verified Tippy version in this documentation is ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/tippy/releases/tag/v0.3.2"},"v0.3.2"),"."))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The current user must have permissions to run ckb-cli, Capsule, Moleculec and docker. If the execution of these tools requires sudo commands, that may cause issues during the deployment process."))),Object(l.b)("h4",{id:"steps"},"Steps"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a CKB account for the deployment."),Object(l.b)("p",{parentName:"li"},"The account must have enough CKB capacity for the deployment.  For more information about CKB accounts and creating CKB accounts, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbaccount"},"CKB Accounts and Capacity"),"."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"address:\n  mainnet: ckb1qyqpadsep7yruydz5eaulty4xwc2sn6smhashalnjx\n  testnet: ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76\nlock_arg: 0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nlock_hash: 0x499aa230ded32812a246778bc718f4d61a47497c1b7352211d241d2ad333ed75\npk: 0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The account information in this documentation is only used for demonstration. Do ",Object(l.b)("strong",{parentName:"p"},"not")," use these private keys, addresses and args elsewhere.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the CKB node and the CKB miner."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Launch the Tippy dashboard."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd tippy-linux-x64\n$ ./Tippy\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Launch a CKB devnet if you haven't set up any chain yet and specify the miner with the account prepared for the deployment.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the chain and the CKB miner on the Tippy dashboard.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the Godwoken source."),Object(l.b)("p",{parentName:"li"},"Open a new terminal window and run the following command to clone the Godwoken source:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone --recursive https://github.com/nervosnetwork/godwoken\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Deploy an SUDT script to the chain."),Object(l.b)("p",{parentName:"li"},"For mor information, see ",Object(l.b)("a",{parentName:"p",href:"https://docs.nervos.org/docs/labs/sudtbycapsule#introduction"},"Nervos CKB Docs: Write an SUDT script by Capsule"),"."),Object(l.b)("p",{parentName:"li"},"Deploy plan  output example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},'$ capsule deploy --address ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76 --fee 0.0002\nDeployment plan:\n---\nmigrated_capacity: 0.0 (CKB)\nnew_occupied_capacity: 17390.0 (CKB)\ntxs_fee_capacity: 0.0002 (CKB)\ntotal_occupied_capacity: 17390.0 (CKB)\nrecipe:\n  cells:\n    - name: my-sudt\n      index: 0\n      tx_hash: "0x07de15f8afbd4b55e5d11248f4cd9f5195c8d96f171af04e7f727042bb0643c6"\n      occupied_capacity: 17390.0 (CKB)\n      data_hash: "0xfe2a574febac93ef4da8e716403be072e4703da736676107d68a5e31b682943f"\n      type_id: "0x5318897f71a58ca55b6325736b8170d92c49096719db7646427709a890a9eea0"\n  dep_groups: []\n\nConfirm deployment? (Yes/No)\ny\nPassword: \n(1/1) Sending tx 07de15f8afbd4b55e5d11248f4cd9f5195c8d96f171af04e7f727042bb0643c6\nDeployment complete\n')),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"tx_hash")," and ",Object(l.b)("inlineCode",{parentName:"p"},"data_hash")," will be used in the next step to configure the ",Object(l.b)("inlineCode",{parentName:"p"},"setup-config.json")," file.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare the following files under the ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy")," folder."),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"pk"),": The file stores the private key that is used to deploy Godwoken."),Object(l.b)("p",{parentName:"li"}," Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:'language-title="/godwoken/deploy/pk"'},"0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"scripts-build.json"),": The file specifies the pre-built docker image of Godwoken and the repositories of the other components like godwoken_scripts, godwoken_polyjuice and clerkb."),Object(l.b)("p",{parentName:"li"}," Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},'```json title="/godwoken/deploy/scripts-build.json"\n{\n    "prebuild_image": "nervos/godwoken-prebuilds:v0.6.9-rc1",\n    "repos": {\n        "godwoken_scripts": "https://github.com/nervosnetwork/godwoken-scripts#master",\n        "godwoken_polyjuice": "https://github.com/nervosnetwork/godwoken-polyjuice#main",\n        "clerkb": "https://github.com/nervosnetwork/clerkb#v0.4.0"\n    }\n} \n```\n')),Object(l.b)("p",{parentName:"li"}," For more information about the tags of the ",Object(l.b)("inlineCode",{parentName:"p"},"prebuild_image"),", see ",Object(l.b)("a",{parentName:"p",href:"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated"},"nervos/godwoken-prebuilds"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"setup-config.json"),": The file provides configurations for the Rollup."),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"*",Object(l.b)("inlineCode",{parentName:"p"},"l1_sudt_script_type_hash"),": The ",Object(l.b)("inlineCode",{parentName:"p"},"data_hash")," of the deployed SUDT script.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"*",Object(l.b)("inlineCode",{parentName:"p"},"tx_hash")," (under ",Object(l.b)("inlineCode",{parentName:"p"},"l1_sudt_cell_dep"),"): The ",Object(l.b)("inlineCode",{parentName:"p"},"tx_hash")," of the deployed SUDT script.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"*",Object(l.b)("inlineCode",{parentName:"p"},"cells_lock"),": ",Object(l.b)("inlineCode",{parentName:"p"},"cells_lock")," is used to unlock/upgrade Rollup scripts. ")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"*",Object(l.b)("inlineCode",{parentName:"p"},"reward_lock"),": ",Object(l.b)("inlineCode",{parentName:"p"},"reward_lock")," is used to receive challenge rewards. ")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"burn_lock"),": ",Object(l.b)("inlineCode",{parentName:"p"},"burn_lock")," is used to receive burned assets that can be unlocked."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The parameters marked with * must be configured with correct values to deploy Godwoken successfully."))),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="/godwoken/deploy/setup-config.json"',title:'"/godwoken/deploy/setup-config.json"'},'{\n  "l1_sudt_script_type_hash": "0xfe2a574febac93ef4da8e716403be072e4703da736676107d68a5e31b682943f",\n  "l1_sudt_cell_dep": {\n    "dep_type": "code",\n    "out_point": {\n      "tx_hash": "0x07de15f8afbd4b55e5d11248f4cd9f5195c8d96f171af04e7f727042bb0643c6",\n      "index": "0x0"\n    }\n  },\n  "node_initial_ckb": 1200000,\n  "cells_lock": {\n    "code_hash": "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",\n    "hash_type": "type",\n    "args": "0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb"\n  },\n  "reward_lock": {\n    "code_hash": "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",\n    "hash_type": "type",\n    "args": "0x4ca5cf8a6339e89b6f80846f25c72c4fe0702daa"\n  },\n  "burn_lock": {\n    "code_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n    "hash_type": "data",\n    "args": "0x"\n  }\n}\n')))))))),Object(l.b)("ol",{start:6},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Godwoken nodes."),Object(l.b)("p",{parentName:"li"},"To set up Godwoken nodes:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ cd godwoken\n$ RUST_LOG=info cargo +nightly run --bin gw-tools setup -n 2 -k deploy/pk --network devnet --scripts-build-config deploy/build-scripts.json -c deploy/setup-config.json\n")),Object(l.b)("p",{parentName:"li"},"This setup command compiles Godwoken scripts, deploys the scripts and layer 2 genesis blocks, and generates configuration files for the Godwoken nodes.  "),Object(l.b)("p",{parentName:"li"},"The deployment requires approximately 10 minutes to complete depending on network connection."),Object(l.b)("p",{parentName:"li"},"Output Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"...\n2021-11-19T06:22:47Z INFO  gw_tools::deploy_genesis] tx_hash: 0x4ec4532a4b8c7d799ef30d36df413f1e4aa05402336a3df53b4f9afa5baf52cd\n[2021-11-19T06:22:47Z INFO  gw_tools::utils::transaction] waiting tx 4ec4532a4b8c7d799ef30d36df413f1e4aa05402336a3df53b4f9afa5baf52cd\n[2021-11-19T06:22:52Z INFO  gw_tools::utils::transaction] tx proposed\n[2021-11-19T06:22:57Z INFO  gw_tools::utils::transaction] tx commited\n[2021-11-19T06:22:57Z INFO  gw_tools::setup] Finish\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the Godwoken nodes."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The default node mode is ",Object(l.b)("inlineCode",{parentName:"p"},"fullnode"),". It can be modified in ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," to either ",Object(l.b)("inlineCode",{parentName:"p"},"readonly")," mode or ",Object(l.b)("inlineCode",{parentName:"p"},"test")," mode."),Object(l.b)("p",{parentName:"div"},"If the two nodes need to be started within the same environment, manually modify the listening port number in the ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file for each node."))),Object(l.b)("p",{parentName:"li"},"Run the following command to start node1:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ RUST_LOG=info cargo +nightly run --bin godwoken run -c output/node1/config.toml\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the web3 server."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a PostgreSQL instance."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ docker run --name postgres -e POSTGRES_USER=user -e POSTGRES_DB=godwoken -e POSTGRES_PASSWORD=mypassword -d -p 5432:5432 postgres\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Install Redis Server."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ sudo apt install redis-server\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the source of ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-web3"},"godwoken-web3"),"."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/nervosnetwork/godwoken-web3\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare the ",Object(l.b)("inlineCode",{parentName:"p"},".env")," file under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken-web3/packages/api-server"),"."),Object(l.b)("p",{parentName:"li"},"  Refer to the .json files generated under the godwoken/output folder for the settings of the .env file."),Object(l.b)("p",{parentName:"li"},"  Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ cd godwoken-web3\n$ cat > ./packages/api-server/.env <<EOF\nDATABASE_URL=postgres://user:mypassword@localhost:5432/godwoken\nGODWOKEN_JSON_RPC=http://localhost:8119\nETH_ACCOUNT_LOCK_HASH=0x4e4bfdeb6c832291cb8b7cbeabd848257b3a1e326250c7a87963ca1999cd4ba3\nROLLUP_TYPE_HASH=0xc964cb302e13327ddf8ddfee2eb3e954baa33341353fc82a8f364505fae12308\nCHAIN_ID=1024777\nCREATOR_ACCOUNT_ID=3\nDEFAULT_FROM_ADDRESS=0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nPOLYJUICE_VALIDATOR_TYPE_HASH=0xa97661faaf072948bf488f61cc4b55e517af44a79f92a8fb36eae661c1079fa9\nL2_SUDT_VALIDATOR_SCRIPT_TYPE_HASH=0x010ad7ad6a0c07377651da3955dde9c7b9f252593e5fc54b35d031597215d484\nTRON_ACCOUNT_LOCK_HASH=0x99715cb7ecc54d10b539d29456301330de65cf4bc26bd64326748e7b61be3b44\nEOF\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a knexfile.ts file under godwoken-web3/packages/api-server."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-typescript"},'import dotenv from "dotenv";\ndotenv.config({path: "./.env"})\n\nconst knexConfig = {\n  development: {\n    client: "postgresql",\n    connection: {\n      database: \'godwoken\',\n      user:     \'user\',\n      password: \'mypassword\'\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: "knex_migrations"\n    }\n  }\n};\n\nexport default knexConfig;\n'))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the web3 server."),Object(l.b)("p",{parentName:"li"},"To start the web3 server properly, make sure to clear the postgres database, and then run the migration SQL file to recreate the tables before running the server:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-shell"},"$ yarn\n$ yarn run migrate:latest\n$ yarn run build:godwoken\n$ yarn run start\n")),Object(l.b)("p",{parentName:"li"},"The web3 connection settings are as follows:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"//The default port is 3000. \n//The port can be configured in the .env file by the `PORT` parameter.\nRPC URL=http://localhost:3000 \nCHAIN ID=1024777\n")))))),Object(l.b)("h2",{id:"how-to-use-godwoken"},"How to Use Godwoken"),Object(l.b)("h3",{id:"workflow"},"Workflow"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up the environment.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Choose Godwoken testnet or mainnet network, or deploy a local Godwoken network."),Object(l.b)("p",{parentName:"li"},"For more information about Godwoken public networks, see ",Object(l.b)("a",{parentName:"p",href:"/#godwoken-public-networks"},"Godwoken Public Network"),"."),Object(l.b)("p",{parentName:"li"},"For more information about deploying a Godwoken network, see the sections under Deployment.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Deploy an Ethereum DApp to Godwoken."))),Object(l.b)("h3",{id:"rpc-documentation-for-reference"},"RPC Documentation for Reference"),Object(l.b)("p",null,"Godwoken provides a web3 RPC compatible layer."),Object(l.b)("p",null,"For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-web3"},"Ethereum RPC (web3 RPC)"),"."),Object(l.b)("h3",{id:"an-example-of-deploying-an-ethereum-dapp-to-godwoken-by-godwoken-kicker"},"An Example of Deploying an Ethereum DApp to Godwoken by Godwoken-Kicker"),Object(l.b)("h4",{id:"environment-1"},"Environment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Ubuntu 20.04")),Object(l.b)("h4",{id:"prerequisite-development-software"},"Prerequisite Development Software"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Node.js v14"),Object(l.b)("li",{parentName:"ul"},"Yarn "),Object(l.b)("li",{parentName:"ul"},"Docker"),Object(l.b)("li",{parentName:"ul"},"Docker-compose"),Object(l.b)("li",{parentName:"ul"},"Rust")),Object(l.b)("h4",{id:"prerequisite-wallet-software"},"Prerequisite Wallet Software"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"MetaMask")),Object(l.b)("h4",{id:"steps-1"},"Steps"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone an existing ETH DApp."),Object(l.b)("p",{parentName:"li"},"Create a relative directory, if needed, then enter the directory and clone the repository . "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ mkdir -p ~/projects\n$ cd ~/projects\n$ git clone https://github.com/TTNguyenDev/Dapps-Support-ForceBridge -b starter\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Run the ETH DApp.\nInstall the dependencies and  build the smart contracts. Start Ganache to run a local Ethereum development chain."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn && yarn build && yarn start:ganache\n")),Object(l.b)("p",{parentName:"li"},"Open another terminal and start the UI server. "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn ui\n")),Object(l.b)("p",{parentName:"li"},"Open a browser tab to http://localhost:3000 to view the DApp after the server started. ")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Godwoken Testnet in MetaMask."),Object(l.b)("p",{parentName:"li"},"Set up the Metamask extension in browser and the custom RPC with the following information:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"Network Name: Godwoken Testnet\nNew RPC URL: http://godwoken-testnet-web3-rpc.ckbapp.dev/\nChain ID: 71393\nCurrency Symbol (optional): N/A\nBlock Explorer URL (optional): N/A\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Install Polyjuice dependencies."),Object(l.b)("p",{parentName:"li"},"To port the Ethereum application with Nervos' Layer 2, the first step is to install the dependencies that are necessary for Godwoken and Polyjuice to work with. "),Object(l.b)("p",{parentName:"li"},"Two dependencies need to be added to allow the existing web3 DApp to work with the second tier solution Polyjuice: ",Object(l.b)("inlineCode",{parentName:"p"},"@polyjuice-provider/web3")," and ",Object(l.b)("inlineCode",{parentName:"p"},"nervos-godwoken-integration"),"."),Object(l.b)("p",{parentName:"li"},"@polyjuice-provider/web3 is a custom Polyjuice web3 provider used to replace the web3 library, necessary to interact with the Nervos Layer 2 smart contract. Nervos-godwoken-integration is a tool that can generate Polyjuice addresses based on Ethereum addresses."),Object(l.b)("p",{parentName:"li"},"Use the following commands to install both:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn add @polyjuice-provider/web3@0.0.1-rc7 nervos-godwoken-integration@0.0.6\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Add and configure the web3 provider for the Polyjuice web3 provider."),Object(l.b)("p",{parentName:"li"},"Create a new ",Object(l.b)("inlineCode",{parentName:"p"},"config.ts")," file under the ",Object(l.b)("inlineCode",{parentName:"p"},"src"),":"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge/src\n$ touch config.ts\n")),Object(l.b)("p",{parentName:"li"},"Then fill it with the values presented:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"export const CONFIG = {\nWEB3_PROVIDER_URL: 'https://godwoken-testnet-web3-rpc.ckbapp.dev'\nROLLUP_TYPE_HASH: '0x4cc2e6526204ae6a2e8fcf12f7ad472f41a1606d5b9624beebd215d780809f6a'\nETH_ACCOUNT_LOCK_CODE_HASH: '0xdeec13a7b8e100579541384ccaf4b5223733e4a5483c3aec95ddc4c1d5ea5b22'\n}\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Update the UI file.\nUpdate the main UI in the file ",Object(l.b)("inlineCode",{parentName:"p"},"~/projects/blockchain-workshop-ethereum-simple/src/ui/app.tsx"),". Add the following lines in the main dependency importation section of the file:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"import { PolyjuiceHttpProvider } from '@polyjuice-provider/web3';\n\nimport { AddressTranslator } from 'nervos-godwoken-integration';\n\nimport { CONFIG } from '../config';\n")),Object(l.b)("p",{parentName:"li"},"Find and replace line."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const web3 = new Web3((window as any).ethereum);\n")),Object(l.b)("p",{parentName:"li"}," to"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const godwokenRpcUrl = CONFIG.WEB3_PROVIDER_URL;\nconst providerConfig = {\nrollupTypeHash: CONFIG.ROLLUP_TYPE_HASH,\nethAccountLockCodeHash: CONFIG.ETH_ACCOUNT_LOCK_CODE_HASH,\nweb3Url: godwokenRpcUrl\n};\nconst provider = new PolyjuiceHttpProvider(godwokenRpcUrl, providerConfig);\nconst web3 = new Web3(provider);\n")),Object(l.b)("p",{parentName:"li"},"Add a new constant and include the ",Object(l.b)("inlineCode",{parentName:"p"},"useEffect")," hook to display the Polyjuice address to the user:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const [polyjuiceAddress, setPolyjuiceAddress] = useState<string | undefined>();\n\nuseEffect(() => {\n    if (accounts-.[0]) {\n        const addressTranslator = new AddressTranslator();\n        setPolyjuiceAddress(addressTranslator.ethAddressToGodwokenShortAddress(accounts-.[0]));\n    } else {\n        setPolyjuiceAddress(undefined);\n    }\n}, [accounts-.[0]]);\n")),Object(l.b)("p",{parentName:"li"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"useEffect")," hook will execute when ",Object(l.b)("inlineCode",{parentName:"p"},"accounts-[0]")," changes. "),Object(l.b)("p",{parentName:"li"},"Add a new line to the html code to display Polyjuice Address:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"<br />\nYour Polyjuice address: <b>{polyjuiceAddress || ' - '}</b>\n<br />\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set gas limit higher."),Object(l.b)("p",{parentName:"li"},"Godwoken Testnet requires a higher gas limit to be set for transactions."),Object(l.b)("p",{parentName:"li"},"Open the ",Object(l.b)("inlineCode",{parentName:"p"},"TTNguyenToken.ts ")," file under the path ",Object(l.b)("inlineCode",{parentName:"p"},"~/projects/Dapps-Support-ForceBridge/src/lib/contracts")," and add a new constant at the beginning of the file:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const DEFAULT_SEND_OPTIONS = {\n    gas: 6000000\n};\n")),Object(l.b)("p",{parentName:"li"},"Modify 2 functions from:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"async setTransferToken(fromAddress: string, toAddress: string, amount: number) {\n        const tx = await this.contract.methods\n            .transfer(toAddress, this.web3.utils.toWei(this.web3.utils.toBN(amount)))\n            .send({\n                from: fromAddress\n            });\n\n        return tx;\n    }\n    \n      async deploy(fromAddress: string) {\n        const deployTx = await (this.contract\n            .deploy({\n                data: TTNguyenTokenJSON.bytecode,\n                arguments: []\n            })\n            .send({\n                from: fromAddress,\n                to: '0x0000000000000000000000000000000000000000'\n            } as any) as any);\n\n        this.useDeployed(deployTx.contractAddress);\n\n        return deployTx.transactionHash;\n    }\n")),Object(l.b)("p",{parentName:"li"},"to:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"async setTransferToken(fromAddress: string, toAddress: string, amount: number) {\n        const tx = await this.contract.methods\n            .transfer(toAddress, this.web3.utils.toWei(this.web3.utils.toBN(amount)))\n            .send({\n                ...DEFAULT_SEND_OPTIONS,\n                from: fromAddress\n            });\n\n        return tx;\n    }\n    \n      async deploy(fromAddress: string) {\n        const deployTx = await (this.contract\n            .deploy({\n                data: TTNguyenTokenJSON.bytecode,\n                arguments: []\n            })\n            .send({\n                ...DEFAULT_SEND_OPTIONS,\n                from: fromAddress,\n                to: '0x0000000000000000000000000000000000000000'\n            } as any) as any);\n\n        this.useDeployed(deployTx.contractAddress);\n\n        return deployTx.transactionHash;\n    }\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Run and test the DApp"),Object(l.b)("p",{parentName:"li"},"Input the following command to run the app once all the configs for Godwoken have been completed."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ yarn ui\n")),Object(l.b)("p",{parentName:"li"},"Open the browser and navigate to http://localhost:3000/."))),Object(l.b)("h2",{id:"project-examples"},"Project Examples"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/TTNguyenDev/Hackathon-Nervos/tree/main/task_12#document-porting-an-existing-ethereum-dapp-to-polyjuice"},"Porting an Existing Ethereum DApp to Polyjuice"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple"},"godwoken-simple"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple-js"},"godwoken-simple-js"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/YokaiSwap"},"YokaiSwap")))),Object(l.b)("h2",{id:"comparison-with-evm"},"Comparison With EVM"),Object(l.b)("p",null,"Godwoken targets 100% EVM compatibility, the plan is to back every smart contract that the latest Ethereum hard fork version supports. But there are certain things that are incompatible with EVM in the current version."),Object(l.b)("h3",{id:"peth"},"pETH"),Object(l.b)("p",null,"Godwoken introduced a new concept called pETH."),Object(l.b)("p",null,"In Ethereum, the gas for each smart contract is derived by calculation, then calculating the transaction fee by multiplying the gas with a specified gas price. In Godwoken, however, pETH comes in as the unit for calculating transaction fees. In other words, the price of gas in Ethereum is ETH/gas ( denominated in wei, i. e. 1e-18 ether), while that of Godwoken is measured in pETH/gas.  When executing a transaction, Godwoken deducts the transaction fee by using tokens with the layer 2 sUDT type denoted by pETH. "),Object(l.b)("h3",{id:"account-abstraction"},"Account Abstraction"),Object(l.b)("p",null,"Godwoken only provides ",Object(l.b)("a",{parentName:"p",href:"https://ethereum.org/en/glossary/#contract-account"},"contract accounts"),", and the user accounts of Godwoken serve as ",Object(l.b)("a",{parentName:"p",href:"https://ethereum.org/en/glossary/#eoa"},"EoAs"),"."),Object(l.b)("h4",{id:"different-address-types"},"Different Address Types"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"All eth_address(EoA/contract) format are ",Object(l.b)("inlineCode",{parentName:"li"},"short_godwoken_account_script_hash"),", which is the 20 bytes prefix of Godwoken account script hash."),Object(l.b)("li",{parentName:"ul"},"Creating a contract account returns ",Object(l.b)("inlineCode",{parentName:"li"},"short_godwoken_account_script_hash"))),Object(l.b)("p",null,"When passing some parameters of ",Object(l.b)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.9/types.html#address"},"address-type")," to call smart-contract, the ",Object(l.b)("inlineCode",{parentName:"p"},"address")," conversion has to be done beforehand, and vice versa to return the ",Object(l.b)("inlineCode",{parentName:"p"},"address")," value. Polyjuice-Provider is designed to handle these conversion tasks. It conducts ",Object(l.b)("inlineCode",{parentName:"p"},"address")," type conversions based on the ABI of the contract."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Unfortunately, we are not yet able to display assets directly on metamask or other Ethereum wallets. We currently use a single web app to display users' assets. This wallet display issue will be resolved in future updates.")),Object(l.b)("h3",{id:"transaction-structure"},"Transaction Structure"),Object(l.b)("p",null,"A Polyjuice transaction is essentially a Godwoken transaction."),Object(l.b)("p",null,"When sending an Ethereum transaction, the transaction gets converted to a Godwoken ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken/blob/9a3d92/crates/types/schemas/godwoken.mol#L56-L61"},"RawL2Transaction")," type, which is automatically processed by ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/polyjuice-provider"},"Polyjuice-Provider"),"."),Object(l.b)("h3",{id:"behavioral-differences-of-some-opcodes"},"Behavioral Differences of Some Opcodes"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"EVM Opcode"),Object(l.b)("th",{parentName:"tr",align:null},"Solidity Usage"),Object(l.b)("th",{parentName:"tr",align:null},"Behavior in Polyjuice"),Object(l.b)("th",{parentName:"tr",align:null},"Behavior in EVM"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"COINBASE"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"block.coinbase")),Object(l.b)("td",{parentName:"tr",align:null},"address of the block_producer"),Object(l.b)("td",{parentName:"tr",align:null},"address of the current block's miner")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"CHAINID"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"chain_id()")),Object(l.b)("td",{parentName:"tr",align:null},"creator_account_id"),Object(l.b)("td",{parentName:"tr",align:null},"Istanbul hardfork, EIP-1344: current network's chain id")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"GASLIMIT"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"block.gaslimit")),Object(l.b)("td",{parentName:"tr",align:null},"12,500,000"),Object(l.b)("td",{parentName:"tr",align:null},"current block's gas limit")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"DIFFICULTY"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"block.difficulty")),Object(l.b)("td",{parentName:"tr",align:null},"2,500,000,000,000,000"),Object(l.b)("td",{parentName:"tr",align:null},"current block's difficulty")))),Object(l.b)("h3",{id:"addition-features"},"Addition Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"pre-compiled contract",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Add ",Object(l.b)("inlineCode",{parentName:"li"},"recover_account")," for recover any supported signature"),Object(l.b)("li",{parentName:"ul"},"Add ",Object(l.b)("inlineCode",{parentName:"li"},"balance_of_any_sudt")," for query the balance of any sudt_id account"),Object(l.b)("li",{parentName:"ul"},"Add ",Object(l.b)("inlineCode",{parentName:"li"},"transfer_to_any_sudt")," for transfer value by sudt_id (Must collaborate with SudtErc20Proxy.sol contract)"),Object(l.b)("li",{parentName:"ul"},"Add ",Object(l.b)("inlineCode",{parentName:"li"},"eth_to_godwoken_addr")," for convert ETH address to polyjuice contract address (godwoken short address)")))),Object(l.b)("h4",{id:"recover_account-spec"},Object(l.b)("inlineCode",{parentName:"h4"},"recover_account")," Spec"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  Recover an EoA account script hash by signature\n\n  input: (the input data is from abi.encode(mesage, signature, code_hash))\n  ======\n    input[ 0..32]  => message\n    input[32..64]  => offset of signature part\n    input[64..96]  => code_hash (EoA lock hash)\n    input[96..128] => length of signature data\n    input[128..]   => signature data\n\n  output (32 bytes):\n  =======\n    output[0..32] => account script hash\n")),Object(l.b)("p",null,"See: ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice/blob/docs-evm-compatibility/polyjuice-tests/src/test_cases/evm-contracts/RecoverAccount.sol"},"Example")),Object(l.b)("h4",{id:"balance_of_any_sudt-spec"},Object(l.b)("inlineCode",{parentName:"h4"},"balance_of_any_sudt")," Spec"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  Query the balance of `account_id` of `sudt_id` token.\n\n   input:\n   ======\n     input[ 0..32] => sudt_id (big endian)\n     input[32..64] => address (short_address)\n\n   output:\n   =======\n     output[0..32] => amount\n")),Object(l.b)("p",null,"See: ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice/blob/docs-evm-compatibility/solidity/erc20/SudtERC20Proxy.sol"},"Example")),Object(l.b)("h4",{id:"transfer_to_any_sudt-spec"},Object(l.b)("inlineCode",{parentName:"h4"},"transfer_to_any_sudt")," Spec"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  Transfer `sudt_id` token from `from_id` to `to_id` with `amount` balance.\n\n  NOTE: This pre-compiled contract need caller to check permission of `from_id`,\n  currently only `solidity/erc20/SudtERC20Proxy.sol` is allowed to call this contract.\n\n   input:\n   ======\n     input[ 0..32 ] => sudt_id (big endian)\n     input[32..64 ] => from_addr (short address)\n     input[64..96 ] => to_addr (short address)\n     input[96..128] => amount (big endian)\n\n   output: []\n")),Object(l.b)("p",null,"See: ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice/blob/docs-evm-compatibility/solidity/erc20/SudtERC20Proxy.sol"},"Example")),Object(l.b)("h4",{id:"eth_to_godwoken_addr-spec"},Object(l.b)("inlineCode",{parentName:"h4"},"eth_to_godwoken_addr")," Spec"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"}," Calculate godwoken short address of an contract account by it's corresponding ETH address\n\n input:\n ======\n   input[12..32] => ETH address\n\n output:\n   output[12..32] => godwoken short address\n")),Object(l.b)("p",null,"See: ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice/blob/docs-evm-compatibility/polyjuice-tests/src/test_cases/evm-contracts/EthToGodwokenAddr.sol"},"Example")),Object(l.b)("h4",{id:"others"},"Others"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"transaction context",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"chain_id is ",Object(l.b)("a",{parentName:"li",href:"https://github.com/nervosnetwork/godwoken/blob/5735d8f/docs/life_of_a_polyjuice_transaction.md#root-account--deployment"},"creator_account_id")),Object(l.b)("li",{parentName:"ul"},"block gas limit is ",Object(l.b)("inlineCode",{parentName:"li"},"12500000"),", and is not block level limit, every transaction can reach the limit"),Object(l.b)("li",{parentName:"ul"},"block difficulty is always ",Object(l.b)("inlineCode",{parentName:"li"},"2500000000000000")))),Object(l.b)("li",{parentName:"ul"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"transfer value")," can not exceed uint128:MAX"),Object(l.b)("li",{parentName:"ul"},"pre-compiled contract",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bn256_pairing")," is not supported yet\uff0cdue to too high cycle cost (WIP)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/nervosnetwork/godwoken-polyjuice/blob/docs-evm-compatibility/docs/Addition-Features.md"},"addition pre-compiled contracts"))))),Object(l.b)("h2",{id:"decentralization-roadmap"},"Decentralization Roadmap"),Object(l.b)("p",null,"We provide a solid roadmap to evolve the Godwoken network step by step from semi-decentralization to fully decentralization."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 1 (initial launch)"),": The whole network has one sequencer to sort transactions. Developers can run their own Godwoken nodes in the readonly mode and watch the on-chain rollup transactions to compute and verify the rollup global state.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 2"),": The network will introduce permissionless challenger node, everyone can run their Godwoken nodes in challenger mode. If the sequencer commits an invalid state, then, a challenge will be automatically processed by a random Godwoken node. It depends on which node sends the challenge first. If the challenge has successed, the sequencer will lose the staked assets on layer1 and the rollup's state will be reverted.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 3"),": The network will introduce permissionless full nodes. The multiple sequencer mechanism will be investigated and explored."))),Object(l.b)("h2",{id:"references"},"References"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Resource"),Object(l.b)("th",{parentName:"tr",align:null},"Link"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Nervos'","\xa0","Layer","\xa0","2 EVM","\xa0","Training"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://nervos.gitbook.io/layer-2-evm/"},"https://nervos.gitbook.io/layer-2-evm/"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Nervos","\xa0","Document","\xa0","Website"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://docs.nervos.org/"},"https://docs.nervos.org/"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken","\xa0","Basics"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://talk.nervos.org/t/introducing-godwoken-a-missing-piece-of-the-cell-model/4464?_360safeparam=13594453"},"Introducing Godwoken - A missing piece of the cell model")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://medium.com/nervosnetwork/towards-ckb-style-lego-pieces-polyjuice-on-godwoken-cbc935d77abf"},"Towards CKB style Lego pieces: Polyjuice on Godwoken"))))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Source","\xa0","Code"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/nervosnetwork/godwoken"},"https://github.com/nervosnetwork/godwoken"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken-Kicker"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/RetricSu/godwoken-kicker"},"Godwoken-Kicker: one line command to start godwoken-polyjuice chain"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Ethereum","\xa0","RPC","\xa0"," (web3","\xa0","RPC)"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://geth.ethereum.org/docs/rpc/server"},"Ethereum RPC (web3 RPC)"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Gitcoin","\xa0","Hackathon"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://github.com/Kuzirashi/gw-gitcoin-instruction"},"Godwoken Gitcoin Instruction")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://gitcoin.co/hackathon/nervos/onboard"},"NERVOS - BROADEN THE SPECTRUM"))))))))}f.isMDXComponent=!0}}]);